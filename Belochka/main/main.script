local gravity = -1900
local jump_takeoff_speed = 1200

function init(self)
	msg.post(".", "acquire_input_focus") -- <1>
	self.velocity = vmath.vector3() -- <2>    
end

function update(self, dt)
	local pos = go.get_position() -- <3>
	pos = pos + self.velocity * dt -- <4>
	go.set_position(pos) -- <5>

	self.velocity.x = 0 -- <6>
	self.velocity.y = 0
end

function fixed_update(self, dt)
	-- apply gravity
	self.velocity.y = self.velocity.y + gravity * dt

	-- move player
	local pos = go.get_position()
	pos = pos + self.velocity * dt
	go.set_position(pos)

end

local function jump(self)
	-- only allow jump from ground
	-- (extend this with a counter to do things like double-jumps)
	if self.ground_contact then
		-- set take-off speed
		self.velocity.y = jump_takeoff_speed
		self.ground_contact = false
	end
end

local function abort_jump(self)
	-- cut the jump short if we are still going up
	if self.velocity.y > 0 then
		-- scale down the upwards speed
		self.velocity.y = self.velocity.y * 0.5
	end
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		self.velocity.x = -500 -- <8>
	elseif action_id == hash("right") then
		self.velocity.x = 500
	elseif action_id == hash("jump") then
		if action.pressed then
			jump(self)
		elseif action.released then
			abort_jump(self)
		end
	end
end

--[[
1. Tell the engine that the current game object ("." is 
shorthand for that) should receive user input to the function
	`on_input()` in its script components.
	2. Construct a vector to indicate velocity. It will initially be
	zero.
	3. Each frame, get the current position and store in `pos`.
	4. Add the velocity, scaled to the current frame length. Velocity
	is therefore expressed in pixels per second.
	5. Set the game object's position to the newly calculated position.
	6. Zero out the velocity. If no input is given, there should be
	no movement.
	7. If the user presses "up", set the y component of the velocity to 150.
	If the user presses "down", set the y component to -150.
	8. Similarly, if the user presses "left", set the x component of the velocity to -150.
	And finally, if the user presses "right", set the x component to 150.
	--]]